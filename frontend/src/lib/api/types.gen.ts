// This file is auto-generated by @hey-api/openapi-ts

/**
 * ChatRequest
 * Request model for chat-based outline generation.
 */
export type ChatRequest = {
    /**
     * Prompt
     * The user prompt for slide outline generation.
     */
    prompt: string;
    /**
     * Slidecount
     * Desired number of slides (1-20).
     */
    slideCount: number;
    /**
     * Model
     * LLM model identifier (e.g., 'openrouter/gpt-4o-mini').
     */
    model?: string | unknown;
    /**
     * Language
     * ISO 639-1 language code (e.g., 'en').
     */
    language?: string | unknown;
    /**
     * Context
     * Optional context/background for the presentation.
     */
    context?: string | unknown;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * HealthResponse
 */
export type HealthResponse = {
    /**
     * Status
     */
    status: string;
    /**
     * Version
     */
    version: string;
    /**
     * Git Sha
     */
    git_sha: string;
};

/**
 * ImageMeta
 * Metadata for an image to be included in a slide.
 */
export type ImageMeta = {
    /**
     * Url
     * The image URL.
     */
    url: string;
    /**
     * Alttext
     * Alt text for accessibility.
     */
    altText: string;
    /**
     * Provider
     * Image provider name (e.g., 'runware').
     */
    provider: string;
};

/**
 * LoginRequest
 */
export type LoginRequest = {
    /**
     * Email
     */
    email: string;
};

/**
 * PPTXJob
 * Model representing a PPTX build job.
 */
export type PptxJob = {
    /**
     * Jobid
     * Unique job identifier.
     */
    jobId: string;
    /**
     * Status
     * Job status.
     */
    status: 'pending' | 'in_progress' | 'completed' | 'failed';
    /**
     * Resulturl
     * URL to download the generated PPTX file.
     */
    resultUrl?: string | unknown;
    /**
     * Errormessage
     * Error message if the job failed.
     */
    errorMessage?: string | unknown;
};

/**
 * RefreshRequest
 */
export type RefreshRequest = {
    /**
     * Refresh Token
     */
    refresh_token: string;
};

/**
 * SlidePlan
 * Plan for a single slide in the generated presentation.
 */
export type SlidePlan = {
    /**
     * Title
     * Slide title.
     */
    title: string;
    /**
     * Bullets
     * Bullet points for the slide.
     */
    bullets: Array<string>;
    /**
     * Optional image metadata.
     */
    image?: ImageMeta | unknown;
    /**
     * Notes
     * Optional speaker notes.
     */
    notes?: string | unknown;
};

/**
 * TokenPair
 */
export type TokenPair = {
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Refresh Token
     */
    refresh_token: string;
    /**
     * Token Type
     */
    token_type?: string;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type LoginApiV1AuthLoginPostData = {
    body: LoginRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/login';
};

export type LoginApiV1AuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Too Many Requests
     */
    429: unknown;
};

export type LoginApiV1AuthLoginPostError = LoginApiV1AuthLoginPostErrors[keyof LoginApiV1AuthLoginPostErrors];

export type LoginApiV1AuthLoginPostResponses = {
    /**
     * Successful Response
     */
    200: TokenPair;
};

export type LoginApiV1AuthLoginPostResponse = LoginApiV1AuthLoginPostResponses[keyof LoginApiV1AuthLoginPostResponses];

export type RefreshApiV1AuthRefreshPostData = {
    body: RefreshRequest;
    path?: never;
    query?: never;
    url: '/api/v1/auth/refresh';
};

export type RefreshApiV1AuthRefreshPostErrors = {
    /**
     * Unauthorized
     */
    401: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Too Many Requests
     */
    429: unknown;
};

export type RefreshApiV1AuthRefreshPostError = RefreshApiV1AuthRefreshPostErrors[keyof RefreshApiV1AuthRefreshPostErrors];

export type RefreshApiV1AuthRefreshPostResponses = {
    /**
     * Successful Response
     */
    200: TokenPair;
};

export type RefreshApiV1AuthRefreshPostResponse = RefreshApiV1AuthRefreshPostResponses[keyof RefreshApiV1AuthRefreshPostResponses];

export type GenerateChatOutlineApiV1ChatGeneratePostData = {
    body: ChatRequest;
    path?: never;
    query?: never;
    url: '/api/v1/chat/generate';
};

export type GenerateChatOutlineApiV1ChatGeneratePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Too Many Requests
     */
    429: unknown;
};

export type GenerateChatOutlineApiV1ChatGeneratePostError = GenerateChatOutlineApiV1ChatGeneratePostErrors[keyof GenerateChatOutlineApiV1ChatGeneratePostErrors];

export type GenerateChatOutlineApiV1ChatGeneratePostResponses = {
    /**
     * Response Generate Chat Outline Api V1 Chat Generate Post
     * Successful Response
     */
    200: Array<SlidePlan>;
};

export type GenerateChatOutlineApiV1ChatGeneratePostResponse = GenerateChatOutlineApiV1ChatGeneratePostResponses[keyof GenerateChatOutlineApiV1ChatGeneratePostResponses];

export type BuildSlidesApiV1SlidesBuildPostData = {
    /**
     * Slides
     */
    body: Array<{
        [key: string]: unknown;
    }>;
    path?: never;
    query?: never;
    url: '/api/v1/slides/build';
};

export type BuildSlidesApiV1SlidesBuildPostErrors = {
    /**
     * Validation Error
     */
    422: unknown;
    /**
     * Too Many Requests
     */
    429: unknown;
};

export type BuildSlidesApiV1SlidesBuildPostResponses = {
    /**
     * Successful Response
     */
    200: PptxJob;
};

export type BuildSlidesApiV1SlidesBuildPostResponse = BuildSlidesApiV1SlidesBuildPostResponses[keyof BuildSlidesApiV1SlidesBuildPostResponses];

export type DownloadPptxApiV1SlidesDownloadGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Jobid
         */
        jobId: string;
    };
    url: '/api/v1/slides/download';
};

export type DownloadPptxApiV1SlidesDownloadGetErrors = {
    /**
     * File Not Found
     */
    404: unknown;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DownloadPptxApiV1SlidesDownloadGetError = DownloadPptxApiV1SlidesDownloadGetErrors[keyof DownloadPptxApiV1SlidesDownloadGetErrors];

export type DownloadPptxApiV1SlidesDownloadGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type HealthApiV1HealthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/v1/health';
};

export type HealthApiV1HealthGetResponses = {
    /**
     * Successful Response
     */
    200: HealthResponse;
};

export type HealthApiV1HealthGetResponse = HealthApiV1HealthGetResponses[keyof HealthApiV1HealthGetResponses];

export type MetricsMetricsGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/metrics';
};

export type MetricsMetricsGetResponses = {
    /**
     * Successful Response
     */
    200: string;
};

export type MetricsMetricsGetResponse = MetricsMetricsGetResponses[keyof MetricsMetricsGetResponses];

export type ReadRootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type ReadRootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: `${string}://${string}` | (string & {});
};